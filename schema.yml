openapi: 3.0.3
info:
  title: GradProject API
  version: 1.0.0
  description: GradProject API
paths:
  /:
    get:
      operationId: root_retrieve
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /change-password/:
    post:
      operationId: change_password_create
      tags:
      - change-password
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /login/:
    post:
      operationId: login_create
      description: Standard login with username & password.
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyTokenObtainPair'
          description: ''
  /profile/:
    get:
      operationId: profile_retrieve
      description: API endpoint to retrieve and update user profile.
      tags:
      - profile
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: profile_update
      description: API endpoint to retrieve and update user profile.
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: profile_partial_update
      description: API endpoint to retrieve and update user profile.
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /register/:
    post:
      operationId: register_create
      description: |-
        API endpoint for user registration.
        After successful registration, an OTP is generated and sent to the user's email.
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /request-otp/:
    post:
      operationId: request_otp_create
      tags:
      - request-otp
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /reset-password/:
    post:
      operationId: reset_password_create
      tags:
      - reset-password
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /token/blacklist/:
    post:
      operationId: token_blacklist_create
      description: |-
        Takes a token and blacklists it. Must be used with the
        `rest_framework_simplejwt.token_blacklist` app installed.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenBlacklist'
          description: ''
  /token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /verify-email/:
    post:
      operationId: verify_email_create
      tags:
      - verify-email
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /verify-otp/:
    post:
      operationId: verify_otp_create
      tags:
      - verify-otp
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    MyTokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    PatchedUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          maxLength: 255
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        profile:
          $ref: '#/components/schemas/Profile'
    Profile:
      type: object
      properties:
        full_name:
          type: string
          maxLength: 1000
        bio:
          type: string
          nullable: true
          maxLength: 100
        image:
          type: string
          format: uri
        verified:
          type: boolean
      required:
      - full_name
    Register:
      type: object
      description: |-
        Serializer for user registration.
        This serializer is responsible for handling user registration by
        validating passwords, ensuring password confirmation, and creating
        a new user with a hashed password.
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        username:
          type: string
          maxLength: 255
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        password:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - email
      - first_name
      - last_name
      - password
      - password2
      - username
    TokenBlacklist:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
      required:
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          maxLength: 255
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        profile:
          $ref: '#/components/schemas/Profile'
      required:
      - email
      - first_name
      - id
      - last_name
      - profile
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
